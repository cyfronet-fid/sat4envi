# BEGIN: props from development
spring.datasource.url=jdbc:postgresql://localhost:5433/sat4envi
spring.datasource.username=sat4envi
spring.datasource.password=sat4envi

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=rabbit
spring.rabbitmq.password=rabbit123

geoserver.username=admin
geoserver.password=admin123
geoserver.base-url=http://localhost:8080/geoserver/rest
geoserver.outside-base-url=/wms
geoserver.workspace=main

s3.access-key=minio
s3.secret-key=minio123
s3.endpoint=http://localhost:9001/
s3.bucket=s4e-test-1
s3.presigned-get-timeout=1m

s3.file-storage.bucket=static
s3.file-storage.key-prefix-thumbnail=thumbnails/
s3.file-storage.key-prefix-emblem=emblems/
s3.file-storage.key-prefix-products-categories-icons=categories/

# Test keys from https://developers.google.com/recaptcha/docs/faq.
# Override these locally with your own pair if you need to.
recaptcha.validation.secretKey=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
recaptcha.validation.siteKey=6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
# END: props from development

# See Sec. 3.2, https://www.baeldung.com/spring-email for the source of the mail properties.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=<login user to smtp server>
spring.mail.password=<login password to smtp server>
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Explicitly disable cleaning the db in production by Flyway.
spring.flyway.clean-disabled=true

# api throttling
spring.cache.cache-names=auth-bucket
spring.cache.caffeine.spec=maximumSize=500000,expireAfterAccess=600s

bucket4j.enabled=true
bucket4j.filters[0].cache-name=auth-bucket
bucket4j.filters[0].url=/api/v1/login.*
bucket4j.filters[0].http-response-body="{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
bucket4j.filters[0].rate-limits[0].expression=getRemoteAddr()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=10
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[1].cache-name=auth-bucket
bucket4j.filters[1].url=/api/v1/token.*
bucket4j.filters[1].http-response-body="{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
bucket4j.filters[1].rate-limits[0].expression=getRemoteAddr()
bucket4j.filters[1].rate-limits[0].bandwidths[0].capacity=10
bucket4j.filters[1].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[1].rate-limits[0].bandwidths[0].unit=minutes
